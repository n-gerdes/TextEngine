#import base_character

//This is responsible for setting various variables as a part of this entity's setup
function initialize()
	set_value("destination",0);
end

//Allows you to make something happen after an entity takes damage
function on_damage_taken(source, amount)

end

function on_entity_approach(ent)

end

//Function that controls this entity's behavior when it isn't the perspective entity
function get_ai_command()
	cmd = "do nothing";
	
	if(get_scene() == "docks")	then
		cmd = "go to town";
	else if (get_scene() == "town") then
		rng = rand(1, 4);
		if(rng == 1) then
			cmd = "go to docks"
		else if (rng == 2) then
			cmd = "go to farm"
		else if (rng == 3) then
			cmd = "go to woods"
		else if (rng == 4) then
			cmd = "go to castle"
		end
	else if (get_scene() == "castle") then
		cmd = "go to town";
	else if (get_scene() == "docks") then
		cmd = "go to town";
	else if (get_scene() == "farm") then
		rng = rand(1,2);
		if(rng == 1) then
			cmd = "go to woods";
		else
			cmd = "go to town";
		end
	else
		rng = rand(1,2);
		if(rng == 1) then
			cmd = "go to farm";
		else
			cmd = "go to town";
		end
	end
	println : MERCHANT: cmd
	return cmd;
end

//This is called before this entity takes its turn
function before_turn()
	
	
	say("I'm here!");
end

function before_leave(dest)
	entity(~player).set_value("debug", get_value("destination"));
	say("I'm leaving!");
end

function wait(time)
	//println: time
	if(!is_int(time))
		return "You must enter a whole number"
	end
	if(get_value("rounds_spent_waiting") >= time)
		set_value("rounds_spent_waiting", 1)
		return FINISH
	else
		set_value("rounds_spent_waiting", get_value("rounds_spent_waiting") + 1)
		//println: "HAVE WAITED FOR " get_value("rounds_spent_waiting") " ROUNDS OUT OF " time
		return REPEAT
	end
end

/////////////////////

function command:wait $time minutes(ent, time)
	if(ent != get_true_name())
		return FAILURE
	end
	return wait(time*12)
end

function command:wait $time seconds(ent, time)
	if(ent != get_true_name())
		return FAILURE
	end
	return wait(int(time/5))
end

function command:wait $time hours(ent, time)
	if(ent != get_true_name())
		return FAILURE
	end
	return wait(time*720)
end

function command:wait $time(ent, time)
	if(ent != get_true_name())
		return FAILURE
	end
	return wait(time)
end

function command:wait(ent)
	if(ent != get_true_name())
		return FAILURE
	end
	return wait(1)
end
